@using System.Web;
@using SaphirCongesCore.Utils;
@{
    ViewBag.Title = "Calendrier Annuel";
}
@section calendar {
    <link href="~/Content/calendar.css" rel="stylesheet" />
    <style>


       @Html.Raw(Utils.CongesColors())


    </style>
    <script src="~/Scripts/jquery.year_calendar.js"></script>
    <script>
        function initCalendar() {
            //Days colorify
            var date_styles = [

       @{
    if (ViewBag.CongesGeneral != null)
    {
        foreach (var item in ViewBag.CongesGeneral)
        {

            //NN: check whether frequency of holiday is yearly, then sets year to current year //
            if (item.Frequency == 0)
            {
                item.StartDate = Utils.SetAnneeActuelle(item.StartDate);
                item.EndDate = Utils.SetAnneeActuelle(item.EndDate);
            }

            //NN: subtracts 1 from month, as array used here in javascript is zero based //
            item.StartDate = item.StartDate.AddMonths(-1);
            item.EndDate = item.EndDate.AddMonths(-1);
            item.EndDate = item.EndDate.AddDays(1);


            var color = (item.Type == "CongeEmploye") ? "CongeEmploye" : "JoursFeries";
            String str = "{ Début: nouvelle date(" + string.Format("{0:dd/MM/yyyy}", item.StartDate) + "), Fin: nouvelle date(" + string.Format("{0:dd/MM/yyyy}", item.EndDate) + "), label: '" + item.Nom + " ',Titre: '" + color + "' },";

            Utils.HTMLRaw(str);
        }
    }

    if (ViewBag.Conges != null)
    {

        foreach (var item2 in ViewBag.Conges)
        {

            /*NN: subtracts 1 from month, as array used here in javascript is zero based */
            item2.StartDate = item2.StartDate.AddMonths(-1);
            item2.EndDate = item2.EndDate.AddMonths(-1);
            var color2 = (item2.Statut == "en attente" || item2.Statut == null) ? "en attente" : " " + item2.TypeConges;
            string str = "{ Début: nouvelle date(" + string.Format("{0:dd/MM/yyyy}", item2.StartDate) + "), Fin: nouvelle date(" + string.Format("{0:dd/MM/yyyy}", item2.EndDate) + "), label: '" + " ', Titre: '" + color2 + "' },";


            if (item2.StartDate == item2.EndDate && item2.HalfDay == null)
            {
                item2.EndDate = item2.EndDate.AddDays(1);
                string str2 = "{ Début: nouvelle date(" + string.Format("{0:dd/MM/yyyy}", item2.StartDate) + "), Fin: nouvelle date" + string.Format("{0:dd/MM/yyyy}", item2.EndDate) + "), label: '" + color2 + " ', Titre: '" + color2 + "' },";
                Utils.HTMLRaw(str2);
            }
        }
    }


}
    ];

           //Events to click
           var events = [

           ];

           //NN:Orange corners for half day
           var halfDays = [
                 @{

               /*NN: get half days */
               if (ViewBag.Conges != null)
               {
                   foreach (var item3 in ViewBag.Conges)
                   {
                       /*NN: checks if half day to dispay is weekend, then skips*/
                       if(item3.HalfDay != null)
                       {

                           string str = "{ Date: nouvelle date(" + string.Format("{0:dd/MM/yyyy}", item3.EndDate) + "), Titre: 'Demi-journée' },";

                           /*@Html.Raw(str) */
                       }


                   }
               }

           }


            ];
           var markers = halfDays;

           var event_click = function (evt) {
               var _id = evt.data('_id');
                $.each(events, function (i, e) {
                   if (e._id == _id)
                       alert(e.title);
               });
           }

           var range_select = function (day1, day2) {
               var d1 = new Date(day1.data('date'));
               var d2 = new Date(day2.data('date'));
               d1.setHours(12, 0);
               d2.setHours(12, 0);
               selected_range_start = d1;
               selected_range_end = d2;
           }

           var range_unselect = function () {
               selected_range_start = false;
               selected_range_end = false;
           }

           var marker_click = function (evt) {

           }

            $("#calendar-holder").year_calendar({
               // year: 2013, // Optional, defaults to current year - pass in a year - Integer or String
               scroll_to_date: true, // Scroll to the current date?,
                date_styles: date_styles,
                events: events,
                event_click: event_click,
                ///day_click: day_click,
                range_select: range_select,
                range_unselect: range_unselect,
                markers: markers,
                marker_click: marker_click
            });
        }

        $(document).ready(function () {
            initCalendar();
            $(".day").click(function () {
                var myClasses = this.classList;
                if (myClasses[3] != 'selected')
                    $("#selection").text(myClasses[3]);

            });
        })

    </script>
   
}
<h2>Calendrier</h2>
<div id='calendar-holder'>

</div>

<br />
<br />
